

$ docker build . -t wasm-engines


# docker needs --security-opt because one of the engines (life or wasmer?) uses an uncommon syscall (userfaultfd??)

$ docker run -it -v $(pwd)/wasmfiles:/wasmfiles -v $(pwd)/testresults:/testresults --security-opt seccomp=./seccompprofile.json wasm-engines

$ PYTHONIOENCODING=UTF-8 python3 ewasm.py |& tee wasm-run1.log

# use python 3.7 instead of PYTHONIOENCODING
# sys.stdout.reconfigure(encoding='utf-8')

$ python3.7 ewasm.py |& tee wasm-run1.log


$ cd evmrace
$ docker build . -t evmrace
$ docker run -it --entrypoint=/bin/bash -v $(pwd)/evmwasmfiles:/evmwasmfiles -v $(pwd)/evmraceresults:/evmraceresults evmrace

$ PYTHONIOENCODING=UTF-8 python3 evmracer.py

# after running evmracer.py, wasm files will be saved to /evmwasmfiles

$ PYTHONIOENCODING=UTF-8 python3 precompileracer.py

### then copy the test report csv files into one folder for the analysis
# /evmraceresults/native_benchmarks.csv
# /evmraceresults/evm_benchmarks.csv
# /evmraceresults/geth_precompile_benchmarks.csv

# rust-codes
## build native
cargo build --release --bin sha1_native
# build wasm
cargo build --release --lib --target wasm32-unknown-unknown
